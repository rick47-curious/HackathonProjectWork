<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="20" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Test for the method : verifyPage has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : verifyPage
]]>
    </line>
    <line>
      <![CDATA[Test for the method : setoption has started
]]>
    </line>
    <line>
      <![CDATA[Test for the method : verifyPage has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : verifyPage
]]>
    </line>
    <line>
      <![CDATA[Test for the method : setoption has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : setoption
]]>
    </line>
    <line>
      <![CDATA[Test for the method : setLoanAmount has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : setoption
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeAmount has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : setLoanAmount
]]>
    </line>
    <line>
      <![CDATA[Test for the method : setInterest has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : typeAmount
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeInterest has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : setInterest
]]>
    </line>
    <line>
      <![CDATA[Test for the method : setTenure has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : typeInterest
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeTenure has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : setTenure
]]>
    </line>
    <line>
      <![CDATA[Test for the method : getOutput has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : getOutput
]]>
    </line>
    <line>
      <![CDATA[Test for the method : getScreenshot has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : typeTenure
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeStartingMonth has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : typeStartingMonth
]]>
    </line>
    <line>
      <![CDATA[Test for the method : clickExpand has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : getScreenshot
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : clickExpand
]]>
    </line>
    <line>
      <![CDATA[Test for the method : getDataInWorkbook has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : getDataInWorkbook
]]>
    </line>
    <line>
      <![CDATA[Test for the method : takeScreenshot has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : takeScreenshot
]]>
    </line>
    <line>
      <![CDATA[Test for the method : newCarLoan has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : newCarLoan
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeNewAmount has started
]]>
    </line>
    <line>
      <![CDATA[
Test for method typeNewAmount has failed
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeNewInterest has started
]]>
    </line>
    <line>
      <![CDATA[
Test for method typeNewInterest has failed
]]>
    </line>
    <line>
      <![CDATA[Test for the method : typeNewTenure has started
]]>
    </line>
    <line>
      <![CDATA[
Test for method typeNewTenure has failed
]]>
    </line>
    <line>
      <![CDATA[Test for the method : clickSecondExpand has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : clickSecondExpand
]]>
    </line>
    <line>
      <![CDATA[Test for the method : getNewValues has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : getNewValues
]]>
    </line>
    <line>
      <![CDATA[Test for the method : takesecondScreenShot has started
]]>
    </line>
    <line>
      <![CDATA[
Test Successfull for the method : takesecondScreenShot
]]>
    </line>
  </reporter-output>
  <suite started-at="2020-07-19T15:28:19Z" name="Suite" finished-at="2020-07-19T15:29:15Z" duration-ms="56454">
    <groups>
    </groups>
    <test started-at="2020-07-19T15:28:19Z" name="RegressionTest" finished-at="2020-07-19T15:28:37Z" duration-ms="18432">
      <class name="com.EmiCalculator.regressiontest.DriverRegressionTest">
        <test-method is-config="true" signature="getRequiredSettings()[pri:0, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:19Z" name="getRequiredSettings" finished-at="2020-07-19T15:28:20Z" duration-ms="1604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequiredSettings -->
        <test-method is-config="true" signature="loadSynchronization()[pri:0, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:20Z" name="loadSynchronization" finished-at="2020-07-19T15:28:21Z" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadSynchronization -->
        <test-method signature="verifyPage()[pri:0, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:21Z" name="verifyPage" description="Verifying the page title" finished-at="2020-07-19T15:28:29Z" duration-ms="8534" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : verifyPage has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : verifyPage
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyPage -->
        <test-method signature="setoption()[pri:1, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:30Z" name="setoption" description="To click on the CarLoan Option" finished-at="2020-07-19T15:28:31Z" duration-ms="1183" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : setoption has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : setoption
]]>
            </line>
          </reporter-output>
        </test-method> <!-- setoption -->
        <test-method signature="setLoanAmount()[pri:2, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:31Z" name="setLoanAmount" description="Select the Amount using the Slider" finished-at="2020-07-19T15:28:33Z" duration-ms="1892" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : setLoanAmount has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : setLoanAmount
]]>
            </line>
          </reporter-output>
        </test-method> <!-- setLoanAmount -->
        <test-method signature="setInterest()[pri:3, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:33Z" name="setInterest" description="Select the InterestRate using the Slider" finished-at="2020-07-19T15:28:34Z" duration-ms="991" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : setInterest has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : setInterest
]]>
            </line>
          </reporter-output>
        </test-method> <!-- setInterest -->
        <test-method signature="setTenure()[pri:4, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:34Z" name="setTenure" description="Select the Tenure using the Slider" finished-at="2020-07-19T15:28:36Z" duration-ms="1634" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : setTenure has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : setTenure
]]>
            </line>
          </reporter-output>
        </test-method> <!-- setTenure -->
        <test-method signature="getOutput()[pri:5, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:36Z" name="getOutput" description="To Get the view of the Result in the Tabular form" finished-at="2020-07-19T15:28:36Z" duration-ms="453" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : getOutput has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : getOutput
]]>
            </line>
          </reporter-output>
        </test-method> <!-- getOutput -->
        <test-method signature="getScreenshot()[pri:6, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:36Z" name="getScreenshot" description="To get the screenshot of the required result" finished-at="2020-07-19T15:28:37Z" duration-ms="1169" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : getScreenshot has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : getScreenshot
]]>
            </line>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
      </class> <!-- com.EmiCalculator.regressiontest.DriverRegressionTest -->
      <class name="com.EmiCalculator.smoketest.TestDriver">
        <test-method is-config="true" signature="getDriver()[pri:0, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:27:52Z" name="getDriver" finished-at="2020-07-19T15:28:08Z" duration-ms="15887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method is-config="true" signature="getDriver()[pri:0, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:28:08Z" name="getDriver" finished-at="2020-07-19T15:28:19Z" duration-ms="11111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDriver -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:15Z" name="closeDriver" finished-at="2020-07-19T15:30:12Z" duration-ms="56606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:com.EmiCalculator.regressiontest.DriverRegressionTest@449a4f23]" started-at="2020-07-19T15:30:12Z" name="closeDriver" finished-at="2020-07-19T15:30:16Z" duration-ms="4335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- com.EmiCalculator.smoketest.TestDriver -->
    </test> <!-- RegressionTest -->
    <test started-at="2020-07-19T15:28:19Z" name="SmokeTest" finished-at="2020-07-19T15:29:15Z" duration-ms="56454">
      <class name="com.EmiCalculator.smoketest.TestDriver">
        <test-method is-config="true" signature="getRequiredSettings()[pri:0, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:19Z" name="getRequiredSettings" finished-at="2020-07-19T15:28:21Z" duration-ms="2197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequiredSettings -->
        <test-method is-config="true" signature="loadSynchronization()[pri:0, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:21Z" name="loadSynchronization" finished-at="2020-07-19T15:28:30Z" duration-ms="9479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadSynchronization -->
        <test-method signature="verifyPage()[pri:0, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:30Z" name="verifyPage" description="Verifying the page title" finished-at="2020-07-19T15:28:31Z" duration-ms="71" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : verifyPage has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : verifyPage
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyPage -->
        <test-method signature="setoption()[pri:1, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:31Z" name="setoption" description="To click on the CarLoan Option" finished-at="2020-07-19T15:28:32Z" duration-ms="1393" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : setoption has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : setoption
]]>
            </line>
          </reporter-output>
        </test-method> <!-- setoption -->
        <test-method signature="typeAmount()[pri:2, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:32Z" name="typeAmount" description="Type in the Amount and Verify the field" finished-at="2020-07-19T15:28:34Z" duration-ms="1612" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeAmount has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : typeAmount
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeAmount -->
        <test-method signature="typeInterest()[pri:3, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:34Z" name="typeInterest" description="Type in the InterestRate and Verify the field" finished-at="2020-07-19T15:28:35Z" duration-ms="1585" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeInterest has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : typeInterest
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeInterest -->
        <test-method signature="typeTenure()[pri:4, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:35Z" name="typeTenure" description="Type in the Tenure and Verify the field" finished-at="2020-07-19T15:28:37Z" duration-ms="1786" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeTenure has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : typeTenure
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeTenure -->
        <test-method signature="typeStartingMonth()[pri:5, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:37Z" name="typeStartingMonth" description="To check whether StartingMonth field is Enabled or not" finished-at="2020-07-19T15:28:37Z" duration-ms="113" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeStartingMonth has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : typeStartingMonth
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeStartingMonth -->
        <test-method signature="clickExpand()[pri:6, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:37Z" name="clickExpand" description="To Get the view of the Result in the Tabular form" finished-at="2020-07-19T15:28:38Z" duration-ms="613" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : clickExpand has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : clickExpand
]]>
            </line>
          </reporter-output>
        </test-method> <!-- clickExpand -->
        <test-method signature="getDataInWorkbook()[pri:7, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:38Z" name="getDataInWorkbook" description="To get the data from the table into a Worksheet" finished-at="2020-07-19T15:28:39Z" duration-ms="1565" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : getDataInWorkbook has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : getDataInWorkbook
]]>
            </line>
          </reporter-output>
        </test-method> <!-- getDataInWorkbook -->
        <test-method signature="takeScreenshot()[pri:8, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:28:39Z" name="takeScreenshot" description="To get the screenshot of the required result" finished-at="2020-07-19T15:29:06Z" duration-ms="27090" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : takeScreenshot has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : takeScreenshot
]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="newCarLoan()[pri:9, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:06Z" name="newCarLoan" description="Clicking the CarLoan option for Retesting" finished-at="2020-07-19T15:29:11Z" duration-ms="4919" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : newCarLoan has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : newCarLoan
]]>
            </line>
          </reporter-output>
        </test-method> <!-- newCarLoan -->
        <test-method signature="typeNewAmount()[pri:10, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:11Z" name="typeNewAmount" description="Retesting the Amount field" finished-at="2020-07-19T15:29:12Z" duration-ms="995" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minimum Loan Amount : 1 expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minimum Loan Amount : 1 expected [1.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at com.EmiCalculator.smoketest.TestDriver.typeNewAmount(TestDriver.java:191)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeNewAmount has started
]]>
            </line>
            <line>
              <![CDATA[
Test for method typeNewAmount has failed
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeNewAmount -->
        <test-method signature="typeNewInterest()[pri:11, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:12Z" name="typeNewInterest" description="Retesting the Interest Field" finished-at="2020-07-19T15:29:13Z" duration-ms="834" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minimum Interest Rate : 5% expected [5.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minimum Interest Rate : 5% expected [5.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at com.EmiCalculator.smoketest.TestDriver.typeNewInterest(TestDriver.java:201)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeNewInterest has started
]]>
            </line>
            <line>
              <![CDATA[
Test for method typeNewInterest has failed
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeNewInterest -->
        <test-method signature="typeNewTenure()[pri:12, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:13Z" name="typeNewTenure" description="Retesting the Tenure Field" finished-at="2020-07-19T15:29:14Z" duration-ms="660" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minimum Loan Tenure is : 1 Year expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minimum Loan Tenure is : 1 Year expected [1.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at com.EmiCalculator.smoketest.TestDriver.typeNewTenure(TestDriver.java:211)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test for the method : typeNewTenure has started
]]>
            </line>
            <line>
              <![CDATA[
Test for method typeNewTenure has failed
]]>
            </line>
          </reporter-output>
        </test-method> <!-- typeNewTenure -->
        <test-method signature="clickSecondExpand()[pri:13, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:14Z" name="clickSecondExpand" description="To get the view of the Result in the Tabular Form" finished-at="2020-07-19T15:29:14Z" duration-ms="196" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : clickSecondExpand has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : clickSecondExpand
]]>
            </line>
          </reporter-output>
        </test-method> <!-- clickSecondExpand -->
        <test-method signature="getNewValues()[pri:14, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:14Z" name="getNewValues" description="To get the New values in a Worksheet" finished-at="2020-07-19T15:29:15Z" duration-ms="562" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : getNewValues has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : getNewValues
]]>
            </line>
          </reporter-output>
        </test-method> <!-- getNewValues -->
        <test-method signature="takesecondScreenShot()[pri:15, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:15Z" name="takesecondScreenShot" description="To get the screenshot of the updated result" finished-at="2020-07-19T15:29:15Z" duration-ms="543" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test for the method : takesecondScreenShot has started
]]>
            </line>
            <line>
              <![CDATA[
Test Successfull for the method : takesecondScreenShot
]]>
            </line>
          </reporter-output>
        </test-method> <!-- takesecondScreenShot -->
        <test-method is-config="true" signature="closeResources()[pri:0, instance:com.EmiCalculator.smoketest.TestDriver@38cee291]" started-at="2020-07-19T15:29:15Z" name="closeResources" finished-at="2020-07-19T15:29:15Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeResources -->
      </class> <!-- com.EmiCalculator.smoketest.TestDriver -->
    </test> <!-- SmokeTest -->
  </suite> <!-- Suite -->
</testng-results>
